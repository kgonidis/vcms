version: '3.8'

services:
    postgres:
        image: postgres:latest
        container_name: postgres
        networks:
            - vcms
        ports:
            - "5433:5432"
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: postgres
        volumes:
            - postgres_data:/var/lib/postgresql/data

    minio:
        image: minio/minio:latest
        container_name: minio
        networks:
            - vcms
        ports:
            - "9000:9000"
            - "9001:9001"
        environment:
            MINIO_ROOT_USER: minio
            MINIO_ROOT_PASSWORD: minio123
        command: server /data --console-address :9001
        volumes:
            - minio_data:/data
    
    backend:
        image: kgonidis/vcms-backend:latest
        container_name: vcms-backend
        networks:
            - vcms
        depends_on:
            - postgres
            - minio
        build:
            context: backend
            dockerfile: Dockerfile
        ports:
            - "8000:8000"
        environment:
            - MINIO_ENDPOINT=minio:9000
            - MINIO_ACCESS_KEY=minio
            - MINIO_SECRET_KEY=minio123
            - MINIO_SECURE=false
            - POSTGRES_DB=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_HOST=postgres
            - POSTGRES_PORT=5432
    
    frontend:
        image: kgonidis/vcms-frontend:latest
        container_name: vcms-frontend
        networks:
            - vcms
        depends_on:
            - backend
        build:
            context: . 
            dockerfile: Dockerfile
            args:
                - NEXT_PUBLIC_API_URL=http://localhost:8000
        ports:
            - "3000:80"

volumes:
    postgres_data:
        name: postgres_data
    minio_data:
        name: minio_data

networks:
    vcms:
        driver: bridge
        name: vcms